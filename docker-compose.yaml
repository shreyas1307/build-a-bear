services:
  build_bear:
    build:
      context: create-bear-service
      dockerfile: Dockerfile
    depends_on:
      - broker
      - db
    networks:
      - server
    ports:
      - "3100:3100"
  bear_heart:
    build:
      context: add-heart-service
      dockerfile: Dockerfile
    depends_on:
      - broker
      - db
    networks:
      - server
    ports:
      - "3101:3101"
  store_bear:
    build:
      context: store-bear-service
      dockerfile: Dockerfile
    depends_on:
      - broker
      - db
    networks:
      - server
    ports:
      - "3102:3102"
  broker:
    image: apache/kafka:latest
    container_name: broker
    networks:
      - server
    ports:
      - 9092:9092
    volumes:
    - kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    restart: always
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   networks:
  #     - server
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  db:
    image: postgres:latest
    restart: unless-stopped
    # secrets:
    #   - db-password
    networks:
      - server
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=bears
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    networks:
      - server
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    restart: unless-stopped
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    networks:
      - server
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus/yml
      - prometheus-data:/prometheus
  grafana:
    image: grafana/grafana
    networks:
      - server
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
    - grafana-data:/var/lib/grafana
    
networks:
  server:
volumes:
  kafka-data:
  prometheus-data:
  grafana-data: